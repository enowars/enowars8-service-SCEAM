import subprocess
import json
import requests
import time


def get_attack_info():
    address = 'http://localhost:5001/scoreboard/attack.json'
    r = requests.get(address)
    r = r.json()
    r = r["services"]
    r = r["sceam"]
    r = r["10.1.1.1"]
    keys = r.keys()
    keys = [int(i) for i in keys]
    max_key = max(keys)
    r = r[str(max_key)]
    return r


def build_exploit_command(var_id, attack_info):
    # exploit
    process_params = ['enochecker_cli']

    # add checker address:
    # change port to your own port
    process_params += ['-A', 'http://localhost:18008']

    # add service address:
    process_params += ['-a', 'host.docker.internal']

    # add flag regex:
    process_params += ['--flag_regex', 'ENO[A-Za-z0-9+\/=]{48}']

    # variant id:
    process_params += ['-v', str(var_id)]

    # add attack info:
    process_params += ['--attack_info', attack_info[str(var_id)][0]]

    # exploit
    process_params += ['exploit']

    return process_params


def exploit_by_id(var_id, attack_info):
    process_params = build_exploit_command(var_id, attack_info)
    process = subprocess.run(process_params, capture_output=True)
    out = process.stdout.decode("utf-8")
    if "OK" not in out:
        print(f"Exploit failed with return code {process.returncode}")
        print(f"stdout: {process.stdout}")
        print(f"stderr: {process.stderr}")


def exploit(id, num, infinite=1):
    for i in range(infinite):
        info = get_attack_info()
        start_time = time.time()
        for i in range(num):
            exploit_by_id(id, info)
        print(
            f"Exploited {id} {num} times in {time.time() - start_time} seconds")
        if not infinite:
            break


if __name__ == "__main__":
    exploit(1, 10, 20)
